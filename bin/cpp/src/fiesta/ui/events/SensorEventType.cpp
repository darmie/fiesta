// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_fiesta_ui_events_SensorEventType
#include <fiesta/ui/events/SensorEventType.h>
#endif
namespace fiesta{
namespace ui{
namespace events{

::fiesta::ui::events::SensorEventType SensorEventType_obj::SENSOR_ACCELEROMETER;

bool SensorEventType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc)) { outValue = SensorEventType_obj::SENSOR_ACCELEROMETER; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(SensorEventType_obj)

int SensorEventType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc)) return 0;
	return super::__FindIndex(inName);
}

int SensorEventType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val SensorEventType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc)) return SENSOR_ACCELEROMETER;
	return super::__Field(inName,inCallProp);
}

static ::String SensorEventType_obj_sStaticFields[] = {
	HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc),
	::String(null())
};

hx::Class SensorEventType_obj::__mClass;

Dynamic __Create_SensorEventType_obj() { return new SensorEventType_obj; }

void SensorEventType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("fiesta.ui.events.SensorEventType",6f,2d,46,bd), hx::TCanCast< SensorEventType_obj >,SensorEventType_obj_sStaticFields,0,
	&__Create_SensorEventType_obj, &__Create,
	&super::__SGetClass(), &CreateSensorEventType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &SensorEventType_obj::__GetStatic;
}

void SensorEventType_obj::__boot()
{
SENSOR_ACCELEROMETER = hx::CreateConstEnum< SensorEventType_obj >(HX_("SENSOR_ACCELEROMETER",aa,46,bd,fc),0);
}


} // end namespace fiesta
} // end namespace ui
} // end namespace events
