// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_fiesta_ui_events_GamepadEvent
#include <fiesta/ui/events/GamepadEvent.h>
#endif
#ifndef INCLUDED_fiesta_ui_events_GamepadEventType
#include <fiesta/ui/events/GamepadEventType.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b7f8fbfdf7496753_21_new,"fiesta.ui.events.GamepadEvent","new",0x69b8f876,"fiesta.ui.events.GamepadEvent.new","fiesta/ui/events/GamepadEvent.hx",21,0x1bf99f79)
HX_LOCAL_STACK_FRAME(_hx_pos_b7f8fbfdf7496753_30_dispatch,"fiesta.ui.events.GamepadEvent","dispatch",0x992796e4,"fiesta.ui.events.GamepadEvent.dispatch","fiesta/ui/events/GamepadEvent.hx",30,0x1bf99f79)
namespace fiesta{
namespace ui{
namespace events{

void GamepadEvent_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_b7f8fbfdf7496753_21_new)
HXLINE(  22)		this->axis = 0;
HXLINE(  23)		this->axisValue = ( (Float)(0) );
HXLINE(  24)		this->button = 0;
HXLINE(  25)		this->id = 0;
HXLINE(  26)		this->eventType = ::fiesta::ui::events::GamepadEventType_obj::GAMEPAD_AXIS_MOVE_dyn();
            	}

Dynamic GamepadEvent_obj::__CreateEmpty() { return new GamepadEvent_obj; }

void *GamepadEvent_obj::_hx_vtable = 0;

Dynamic GamepadEvent_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GamepadEvent_obj > _hx_result = new GamepadEvent_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GamepadEvent_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5dd2ac48;
}

 ::fiesta::ui::events::GamepadEvent GamepadEvent_obj::eventObject;

 ::Dynamic GamepadEvent_obj::callback;

void GamepadEvent_obj::dispatch( ::fiesta::ui::events::GamepadEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_b7f8fbfdf7496753_30_dispatch)
HXDLIN(  30)		if (hx::IsNotNull( ::fiesta::ui::events::GamepadEvent_obj::callback )) {
HXLINE(  31)			::fiesta::ui::events::GamepadEvent_obj::eventObject =  ::fiesta::ui::events::GamepadEvent_obj::__alloc( HX_CTX );
HXLINE(  32)			::fiesta::ui::events::GamepadEvent_obj::eventObject->axis = event->axis;
HXLINE(  33)			::fiesta::ui::events::GamepadEvent_obj::eventObject->button = event->button;
HXLINE(  34)			::fiesta::ui::events::GamepadEvent_obj::eventObject->id = event->id;
HXLINE(  35)			::fiesta::ui::events::GamepadEvent_obj::eventObject->eventType = event->eventType;
HXLINE(  36)			::fiesta::ui::events::GamepadEvent_obj::eventObject->axisValue = event->axisValue;
HXLINE(  38)			::fiesta::ui::events::GamepadEvent_obj::callback(::fiesta::ui::events::GamepadEvent_obj::eventObject);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GamepadEvent_obj,dispatch,(void))


hx::ObjectPtr< GamepadEvent_obj > GamepadEvent_obj::__new() {
	hx::ObjectPtr< GamepadEvent_obj > __this = new GamepadEvent_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< GamepadEvent_obj > GamepadEvent_obj::__alloc(hx::Ctx *_hx_ctx) {
	GamepadEvent_obj *__this = (GamepadEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GamepadEvent_obj), true, "fiesta.ui.events.GamepadEvent"));
	*(void **)__this = GamepadEvent_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GamepadEvent_obj::GamepadEvent_obj()
{
}

void GamepadEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GamepadEvent);
	HX_MARK_MEMBER_NAME(axis,"axis");
	HX_MARK_MEMBER_NAME(button,"button");
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_MEMBER_NAME(axisValue,"axisValue");
	HX_MARK_MEMBER_NAME(eventType,"eventType");
	HX_MARK_END_CLASS();
}

void GamepadEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(axis,"axis");
	HX_VISIT_MEMBER_NAME(button,"button");
	HX_VISIT_MEMBER_NAME(id,"id");
	HX_VISIT_MEMBER_NAME(axisValue,"axisValue");
	HX_VISIT_MEMBER_NAME(eventType,"eventType");
}

hx::Val GamepadEvent_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return hx::Val( id ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"axis") ) { return hx::Val( axis ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"button") ) { return hx::Val( button ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"axisValue") ) { return hx::Val( axisValue ); }
		if (HX_FIELD_EQ(inName,"eventType") ) { return hx::Val( eventType ); }
	}
	return super::__Field(inName,inCallProp);
}

bool GamepadEvent_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { outValue = ( callback ); return true; }
		if (HX_FIELD_EQ(inName,"dispatch") ) { outValue = dispatch_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"eventObject") ) { outValue = ( eventObject ); return true; }
	}
	return false;
}

hx::Val GamepadEvent_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"axis") ) { axis=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"button") ) { button=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"axisValue") ) { axisValue=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"eventType") ) { eventType=inValue.Cast<  ::fiesta::ui::events::GamepadEventType >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool GamepadEvent_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { callback=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"eventObject") ) { eventObject=ioValue.Cast<  ::fiesta::ui::events::GamepadEvent >(); return true; }
	}
	return false;
}

void GamepadEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("axis",a1,1c,79,40));
	outFields->push(HX_("button",f2,61,e0,d9));
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("axisValue",10,6b,5c,8b));
	outFields->push(HX_("eventType",f4,fb,15,fc));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo GamepadEvent_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(GamepadEvent_obj,axis),HX_("axis",a1,1c,79,40)},
	{hx::fsInt,(int)offsetof(GamepadEvent_obj,button),HX_("button",f2,61,e0,d9)},
	{hx::fsInt,(int)offsetof(GamepadEvent_obj,id),HX_("id",db,5b,00,00)},
	{hx::fsFloat,(int)offsetof(GamepadEvent_obj,axisValue),HX_("axisValue",10,6b,5c,8b)},
	{hx::fsObject /*  ::fiesta::ui::events::GamepadEventType */ ,(int)offsetof(GamepadEvent_obj,eventType),HX_("eventType",f4,fb,15,fc)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo GamepadEvent_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*  ::fiesta::ui::events::GamepadEvent */ ,(void *) &GamepadEvent_obj::eventObject,HX_("eventObject",79,ca,8c,68)},
	{hx::fsObject /*  ::Dynamic */ ,(void *) &GamepadEvent_obj::callback,HX_("callback",c5,99,06,7f)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String GamepadEvent_obj_sMemberFields[] = {
	HX_("axis",a1,1c,79,40),
	HX_("button",f2,61,e0,d9),
	HX_("id",db,5b,00,00),
	HX_("axisValue",10,6b,5c,8b),
	HX_("eventType",f4,fb,15,fc),
	::String(null()) };

static void GamepadEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GamepadEvent_obj::eventObject,"eventObject");
	HX_MARK_MEMBER_NAME(GamepadEvent_obj::callback,"callback");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GamepadEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GamepadEvent_obj::eventObject,"eventObject");
	HX_VISIT_MEMBER_NAME(GamepadEvent_obj::callback,"callback");
};

#endif

hx::Class GamepadEvent_obj::__mClass;

static ::String GamepadEvent_obj_sStaticFields[] = {
	HX_("eventObject",79,ca,8c,68),
	HX_("callback",c5,99,06,7f),
	HX_("dispatch",ba,ce,63,1e),
	::String(null())
};

void GamepadEvent_obj::__register()
{
	GamepadEvent_obj _hx_dummy;
	GamepadEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("fiesta.ui.events.GamepadEvent",84,45,12,b3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GamepadEvent_obj::__GetStatic;
	__mClass->mSetStaticField = &GamepadEvent_obj::__SetStatic;
	__mClass->mMarkFunc = GamepadEvent_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GamepadEvent_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(GamepadEvent_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< GamepadEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GamepadEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GamepadEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GamepadEvent_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace fiesta
} // end namespace ui
} // end namespace events
