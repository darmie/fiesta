// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_fiesta_ui_events_ClipboardEventType
#include <fiesta/ui/events/ClipboardEventType.h>
#endif
namespace fiesta{
namespace ui{
namespace events{

::fiesta::ui::events::ClipboardEventType ClipboardEventType_obj::CLIPBOARD_UPDATE;

bool ClipboardEventType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CLIPBOARD_UPDATE",b2,30,81,a1)) { outValue = ClipboardEventType_obj::CLIPBOARD_UPDATE; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ClipboardEventType_obj)

int ClipboardEventType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("CLIPBOARD_UPDATE",b2,30,81,a1)) return 0;
	return super::__FindIndex(inName);
}

int ClipboardEventType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("CLIPBOARD_UPDATE",b2,30,81,a1)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val ClipboardEventType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CLIPBOARD_UPDATE",b2,30,81,a1)) return CLIPBOARD_UPDATE;
	return super::__Field(inName,inCallProp);
}

static ::String ClipboardEventType_obj_sStaticFields[] = {
	HX_("CLIPBOARD_UPDATE",b2,30,81,a1),
	::String(null())
};

hx::Class ClipboardEventType_obj::__mClass;

Dynamic __Create_ClipboardEventType_obj() { return new ClipboardEventType_obj; }

void ClipboardEventType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("fiesta.ui.events.ClipboardEventType",49,cb,8c,28), hx::TCanCast< ClipboardEventType_obj >,ClipboardEventType_obj_sStaticFields,0,
	&__Create_ClipboardEventType_obj, &__Create,
	&super::__SGetClass(), &CreateClipboardEventType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ClipboardEventType_obj::__GetStatic;
}

void ClipboardEventType_obj::__boot()
{
CLIPBOARD_UPDATE = hx::CreateConstEnum< ClipboardEventType_obj >(HX_("CLIPBOARD_UPDATE",b2,30,81,a1),0);
}


} // end namespace fiesta
} // end namespace ui
} // end namespace events
