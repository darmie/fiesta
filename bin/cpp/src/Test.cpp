// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_92958f0660df95c6
#define INCLUDED_92958f0660df95c6
#include "linc_sdl.h"
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Test
#include <Test.h>
#endif
#ifndef INCLUDED_fiesta_app_events_ApplicationEvent
#include <fiesta/app/events/ApplicationEvent.h>
#endif
#ifndef INCLUDED_fiesta_app_events_ApplicationEventType
#include <fiesta/app/events/ApplicationEventType.h>
#endif
#ifndef INCLUDED_fiesta_graphics_events_RenderEvent
#include <fiesta/graphics/events/RenderEvent.h>
#endif
#ifndef INCLUDED_fiesta_graphics_events_RenderEventType
#include <fiesta/graphics/events/RenderEventType.h>
#endif
#ifndef INCLUDED_fiesta_native_sdl_SDLApplication
#include <fiesta/native/sdl/SDLApplication.h>
#endif
#ifndef INCLUDED_fiesta_ui_events_KeyEvent
#include <fiesta/ui/events/KeyEvent.h>
#endif
#ifndef INCLUDED_fiesta_ui_events_KeyEventType
#include <fiesta/ui/events/KeyEventType.h>
#endif
#ifndef INCLUDED_fiesta_ui_events_WindowEvent
#include <fiesta/ui/events/WindowEvent.h>
#endif
#ifndef INCLUDED_fiesta_ui_events_WindowEventType
#include <fiesta/ui/events/WindowEventType.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_20_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",20,0x8afb218c)
HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_23_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",23,0x8afb218c)
HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_33_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",33,0x8afb218c)
HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_40_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",40,0x8afb218c)
HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_14_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",14,0x8afb218c)

void Test_obj::__construct() { }

Dynamic Test_obj::__CreateEmpty() { return new Test_obj; }

void *Test_obj::_hx_vtable = 0;

Dynamic Test_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Test_obj > _hx_result = new Test_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Test_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x37d2f472;
}

 ::Dynamic Test_obj::state;

void Test_obj::main(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run( ::fiesta::app::events::ApplicationEvent event){
            			HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_20_main)
HXLINE(  20)			::haxe::Log_obj::trace(event->eventType,hx::SourceInfo(HX_("test/Test.hx",8f,7f,93,a4),20,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::fiesta::native::sdl::SDLApplication,app) HXARGC(1)
            		void _hx_run( ::fiesta::ui::events::WindowEvent event1){
            			HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_23_main)
HXLINE(  24)			::haxe::Log_obj::trace(event1->eventType,hx::SourceInfo(HX_("test/Test.hx",8f,7f,93,a4),24,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
HXLINE(  25)			if ((event1->eventType->_hx_getIndex() == 1)) {
HXLINE(  27)				::Sys_obj::exit(app->quit());
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		void _hx_run( ::fiesta::graphics::events::RenderEvent event2){
            			HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_33_main)
HXLINE(  34)			::haxe::Log_obj::trace(event2->eventType,hx::SourceInfo(HX_("test/Test.hx",8f,7f,93,a4),34,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
HXLINE(  35)			::cpp::Pointer<  SDL_Renderer > tmp = ::Test_obj::state->__Field(HX_("renderer",43,c5,db,b2),hx::paccDynamic);
HXDLIN(  35)			SDL_SetRenderDrawColor(tmp,255,255,255,255);
HXLINE(  36)			::cpp::Pointer<  SDL_Renderer > tmp1 = ::Test_obj::state->__Field(HX_("renderer",43,c5,db,b2),hx::paccDynamic);
HXDLIN(  36)			SDL_RenderClear(tmp1);
HXLINE(  37)			::cpp::Pointer<  SDL_Renderer > tmp2 = ::Test_obj::state->__Field(HX_("renderer",43,c5,db,b2),hx::paccDynamic);
HXDLIN(  37)			SDL_RenderPresent(tmp2);
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		void _hx_run( ::fiesta::ui::events::KeyEvent event3){
            			HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_40_main)
HXLINE(  40)			::haxe::Log_obj::trace(event3->eventType,hx::SourceInfo(HX_("test/Test.hx",8f,7f,93,a4),40,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_14_main)
HXLINE(  18)		 ::fiesta::native::sdl::SDLApplication app =  ::fiesta::native::sdl::SDLApplication_obj::__alloc( HX_CTX );
HXLINE(  19)		::fiesta::app::events::ApplicationEvent_obj::callback =  ::Dynamic(new _hx_Closure_0());
HXLINE(  23)		::fiesta::ui::events::WindowEvent_obj::callback =  ::Dynamic(new _hx_Closure_1(app));
HXLINE(  33)		::fiesta::graphics::events::RenderEvent_obj::callback =  ::Dynamic(new _hx_Closure_2());
HXLINE(  39)		::fiesta::ui::events::KeyEvent_obj::callback =  ::Dynamic(new _hx_Closure_3());
HXLINE(  44)		::Test_obj::state = linc::sdl::createWindowAndRenderer(320,320,32);
HXLINE(  45)		app->exec();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Test_obj,main,(void))


Test_obj::Test_obj()
{
}

bool Test_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { outValue = ( state ); return true; }
	}
	return false;
}

bool Test_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { state=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Test_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Test_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*  ::Dynamic */ ,(void *) &Test_obj::state,HX_("state",11,76,0b,84)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Test_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Test_obj::state,"state");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Test_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Test_obj::state,"state");
};

#endif

hx::Class Test_obj::__mClass;

static ::String Test_obj_sStaticFields[] = {
	HX_("state",11,76,0b,84),
	HX_("main",39,38,56,48),
	::String(null())
};

void Test_obj::__register()
{
	Test_obj _hx_dummy;
	Test_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Test",72,f4,d2,37);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Test_obj::__GetStatic;
	__mClass->mSetStaticField = &Test_obj::__SetStatic;
	__mClass->mMarkFunc = Test_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Test_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Test_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Test_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Test_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Test_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

