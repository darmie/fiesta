// Generated by Haxe 4.0.0-rc.2+77068e1
#ifndef INCLUDED_fiesta_ui_events_WindowEventType
#define INCLUDED_fiesta_ui_events_WindowEventType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(fiesta,ui,events,WindowEventType)
namespace fiesta{
namespace ui{
namespace events{


class WindowEventType_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef WindowEventType_obj OBJ_;

	public:
		WindowEventType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("fiesta.ui.events.WindowEventType",f9,e4,26,03); }
		::String __ToString() const { return HX_("WindowEventType.",ea,39,79,a9) + _hx_tag; }

		static ::fiesta::ui::events::WindowEventType WINDOW_ACTIVATE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_ACTIVATE_dyn() { return WINDOW_ACTIVATE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_CLOSE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_CLOSE_dyn() { return WINDOW_CLOSE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_DEACTIVATE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_DEACTIVATE_dyn() { return WINDOW_DEACTIVATE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_ENTER;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_ENTER_dyn() { return WINDOW_ENTER; }
		static ::fiesta::ui::events::WindowEventType WINDOW_EXPOSE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_EXPOSE_dyn() { return WINDOW_EXPOSE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_FOCUS_IN;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_FOCUS_IN_dyn() { return WINDOW_FOCUS_IN; }
		static ::fiesta::ui::events::WindowEventType WINDOW_FOCUS_OUT;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_FOCUS_OUT_dyn() { return WINDOW_FOCUS_OUT; }
		static ::fiesta::ui::events::WindowEventType WINDOW_LEAVE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_LEAVE_dyn() { return WINDOW_LEAVE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_MAXIMIZE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_MAXIMIZE_dyn() { return WINDOW_MAXIMIZE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_MINIMIZE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_MINIMIZE_dyn() { return WINDOW_MINIMIZE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_MOVE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_MOVE_dyn() { return WINDOW_MOVE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_RESIZE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_RESIZE_dyn() { return WINDOW_RESIZE; }
		static ::fiesta::ui::events::WindowEventType WINDOW_RESTORE;
		static inline ::fiesta::ui::events::WindowEventType WINDOW_RESTORE_dyn() { return WINDOW_RESTORE; }
};

} // end namespace fiesta
} // end namespace ui
} // end namespace events

#endif /* INCLUDED_fiesta_ui_events_WindowEventType */ 
